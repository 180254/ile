name: ile-laptop

networks:
  vnet:
    name: ile-base_vnet
    external: true

volumes:
  redis_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${ILE_DIR}/data_redis_laptop

services:
  redis:
    build:
      context: ${PWD}
      dockerfile: deps/redis.Dockerfile
      args:
        ILE_NONROOT_UID: ${ILE_NONROOT_UID}
        ILE_NONROOT_GID: ${ILE_NONROOT_GID}
        ILE_IDR_REDIS_PORT: 6379
        ILE_IDR_REDIS_PASSWORD: ${ILE_IDR_REDIS_PASSWORD}
      no_cache: false
      pull: true
    image: ile-laptop-redis:0.0.1
    user: nonroot:nonroot
    restart: always
    networks:
      vnet:
        ipv4_address: 192.168.130.30
    ports: [ ]
    volumes:
      - redis_data:/data
    logging:
      options:
        max-size: 10m
        max-file: 1
    healthcheck:
      test: timeout -s 15 5 redis-cli -h localhost -p 6379 -a ${ILE_IDR_REDIS_PASSWORD} ping | grep -qaFi PONG || exit 1
      interval: 30s
      timeout: 10s
      start_period: 20s
      retries: 3
    deploy:
      restart_policy:
        condition: any
        delay: 5s
      resources:
        limits:
          cpus: '0.4'
        reservations:
          cpus: '0.3'

  tcp-cache:
    build:
      context: ${ILE_DIR}
      dockerfile: ile_tcp_cache/ile_tcp_cache.Dockerfile
      args:
        ILE_NONROOT_UID: ${ILE_NONROOT_UID}
        ILE_NONROOT_GID: ${ILE_NONROOT_GID}
      no_cache: false
      pull: true
    image: ile-laptop-tcp-cache:0.0.1
    user: nonroot:nonroot
    restart: always
    networks:
      vnet:
        ipv4_address: 192.168.130.31
    ports: [ ]
    environment:
      - ILE_ITC_MY_TCP_BIND_HOST=0.0.0.0
      - ILE_ITC_MY_TCP_BIND_PORT=9152
      - ILE_ITC_TARGET_TCP_HOST=${ILE_ITC_TARGET_TCP_HOST}
      - ILE_ITC_TARGET_TCP_PORT=${ILE_ITC_TARGET_TCP_PORT}
      - ILE_ITC_TARGET_TCP_SSL=${ILE_ITC_TARGET_TCP_SSL}
      - ILE_ITC_TARGET_TCP_SSL_CAFILE=/tls/ca.pem
      - ILE_ITC_TARGET_TCP_SSL_CHECKHOSTNAME=${ILE_ITC_TARGET_TCP_SSL_CHECKHOSTNAME}
      - ILE_ITC_REDIS_HOST=192.168.130.30
      - ILE_ITC_REDIS_PORT=6379
      - ILE_ITC_REDIS_PASSWORD=${ILE_IDR_REDIS_PASSWORD}
    volumes:
      - ${PWD}/tls/${ILE_ENV}/ca.pem:/tls/ca.pem:ro
    logging:
      options:
        max-size: 10m
        max-file: 1
    healthcheck:
      test: timeout -s 15 5 socat -t5 -T5 /dev/null TCP:127.0.0.1:9152 || exit 1
      interval: 30s
      timeout: 10s
      start_period: 20s
      retries: 3
    depends_on:
      redis:
        condition: service_started
        restart: true
    deploy:
      restart_policy:
        condition: any
        delay: 5s
      resources:
        limits:
          cpus: '0.4'
        reservations:
          cpus: '0.3'

  # https://hub.docker.com/_/telegraf
  # https://www.influxdata.com/blog/docker-run-telegraf-as-non-root/
  telegraf:
    build:
      context: ${PWD}
      dockerfile: deps/telegraf.Dockerfile
      args:
        ILE_NONROOT_UID: ${ILE_NONROOT_UID}
        ILE_NONROOT_GID: ${ILE_NONROOT_GID}
      no_cache: false
      pull: true
    image: ile-laptop-telegraf:0.0.1
    user: nonroot:${ILE_DOCKER_GID}
    restart: always
    network_mode: host
    ports: [ ]
    hostname: ${HOSTNAME}
    environment:
      - HOST_ETC=/hostfs/etc
      - HOST_PROC=/hostfs/proc
      - HOST_SYS=/hostfs/sys
      - HOST_VAR=/hostfs/var
      - HOST_RUN=/hostfs/run
      - HOST_MOUNT_PREFIX=/hostfs
      - LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libnvidia-ml.so
      - ILE_ITF_SOCKET_WRITER_ADDRESS=tcp://192.168.130.31:9152
      - ILE_ITF_HEALTH_SERVICE_ADDRESS=http://127.0.0.1:8652
      - ILE_ITF_AGENT_INTERVAL=${ILE_ITF_AGENT_INTERVAL:-20s}
    volumes:
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${ILE_DIR}/ile_telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - ${ILE_DIR}/ile_telegraf/telegraf-writer.conf:/etc/telegraf/telegraf.d/telegraf-writer.conf:ro
      - ${ILE_DIR}/ile_telegraf/telegraf-nvidia.conf:/etc/telegraf/telegraf.d/telegraf-nvidia.conf:ro
      - ${ILE_DIR}/ile_telegraf/telegraf-noncloud.conf:/etc/telegraf/telegraf.d/telegraf-noncloud.conf:ro
      - /usr/bin/nvidia-smi:/usr/bin/nvidia-smi:ro
      - /usr/lib/x86_64-linux-gnu/libnvidia-ml.so:/usr/lib/x86_64-linux-gnu/libnvidia-ml.so:ro
    devices:
      - /dev/nvidiactl:/dev/nvidiactl
      - /dev/nvidia0:/dev/nvidia0
    security_opt:
      # https://github.com/influxdata/telegraf/issues/6574
      - apparmor:unconfined
    logging:
      options:
        max-size: 10m
        max-file: 1
    healthcheck:
      # https://github.com/influxdata/telegraf/blob/release-1.28/plugins/outputs/health/README.md
      test: timeout -s 15 5 curl -f http://127.0.0.1:8652 || exit 1
      interval: 30s
      timeout: 10s
      start_period: 20s
      retries: 3
    depends_on:
      tcp-cache:
        condition: service_started
        restart: true
    deploy:
      restart_policy:
        condition: any
        delay: 5s
      resources:
        limits:
          cpus: '0.4'
        reservations:
          cpus: '0.3'

